cmake_minimum_required(VERSION 3.4)
project(mlcpp)

set(CMAKE_BUILD_TYPE "Release")
set(CMAKE_CXX_FLAGS "-std=c++14") # if want to use auto in Lamda function, should be more recent than c++14
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -Wall -g")


find_package(catkin REQUIRED COMPONENTS
  roscpp
  std_msgs
  sensor_msgs
  geometry_msgs
#   mav_msgs
  image_geometry
  pcl_ros
  pcl_conversions
  cv_bridge
)

find_package(OpenCV 3 REQUIRED)
find_package(PCL REQUIRED)
include_directories(${PCL_INCLUDE_DIRS})
link_directories(${PCL_LIBRARY_DIRS})
add_definitions(${PCL_DEFINITIONS})
find_package(OpenMP REQUIRED)

if(PCL_FOUND)
  message(WARNING "OpenCV Found: " ${OpenCV_VERSION})
endif()
if(PCL_FOUND)
  message(WARNING "PCL Found: " ${PCL_VERSION})
endif()
if(OPENMP_FOUND)
  message(WARNING "OPENMP FOUND")
  set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
  set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${OpenMP_EXE_LINKER_FLAGS}")
endif()




catkin_package()


include_directories(
  include
  ${catkin_INCLUDE_DIRS}
  ${OpenCV_INCLUDE_DIRS}
)


add_executable(${PROJECT_NAME}_node src/Viewpoint_calc.cpp include/stdafx.cpp)
add_dependencies(${PROJECT_NAME}_node ${catkin_EXPORTED_TARGETS})
target_compile_options(${PROJECT_NAME}_node PRIVATE ${OpenMP_CXX_FLAGS})
target_link_libraries(${PROJECT_NAME}_node ${catkin_LIBRARIES} ${PCL_LIBRARIES} ${OpenMP_LIBS} ${OpenCV_LIBS}
    pcl_common
    pcl_visualization
    pcl_registration
    pcl_filters
    pcl_sample_consensus
    pcl_octree
    pcl_io
    )

add_executable(${PROJECT_NAME}_slice_node src/Viewpoint_calc_slice.cpp include/stdafx.cpp)
add_dependencies(${PROJECT_NAME}_slice_node ${catkin_EXPORTED_TARGETS})
target_compile_options(${PROJECT_NAME}_slice_node PRIVATE ${OpenMP_CXX_FLAGS})
target_link_libraries(${PROJECT_NAME}_node ${catkin_LIBRARIES} ${PCL_LIBRARIES} ${OpenMP_LIBS} ${OpenCV_LIBS}
    pcl_common
    pcl_visualization
    pcl_registration
    pcl_filters
    pcl_sample_consensus
    pcl_octree
    pcl_io
    )